openapi: 3.0.3
info:
  title: Üniversite Kütüphane API
  version: 1.0.0
  description: Üniversite içi kitap, öğrenci ve ödünç alma sistemini yöneten REST API.
servers:
  - url: http://localhost:8080/api
    description: Yerel geliştirme sunucusu

tags:
  - name: Books
    description: Kitap işlemleri
  - name: Students
    description: Öğrenci işlemleri
  - name: Loans
    description: Kitap ödünç verme işlemleri

paths:
  /books:
    get:
      tags:
        - Books
      summary: Tüm kitapları listele
      parameters:
        - $ref: '#/components/parameters/QueryPage'
        - $ref: '#/components/parameters/QuerySize'
      responses:
        '200':
          description: Kitap listesi başarıyla döndürüldü
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Books
      summary: Yeni kitap ekle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              id: "b8e4d9c2-f31a-4a5e-bc2b-9a3b09b82f1e"
              title: "OpenAPI 101"
              author: "Jane Doe"
              isbn: "9781234567890"
              publisher: "API Yayıncılık"
              pageCount: 250
              stock: 5
      responses:
        '201':
          description: Kitap başarıyla eklendi
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /books/{id}:
    get:
      tags:
        - Books
      summary: Kitap detayını getir
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Kitap bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags:
        - Books
      summary: Kitap bilgilerini güncelle
      parameters:
        - $ref: '#/components/parameters/PathId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Kitap başarıyla güncellendi
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - Books
      summary: Kitap sil
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Kitap başarıyla silindi
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /students:
    get:
      tags:
        - Students
      summary: Tüm öğrencileri listele
      responses:
        '200':
          description: Öğrenci listesi başarıyla döndürüldü
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Students
      summary: Yeni öğrenci kaydı oluştur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            example:
              id: "b12e3e4a-4512-4c9b-b9d2-7f1848f37dcb"
              name: "Ali Veli"
              studentNumber: "20231234"
              email: "ali.veli@example.com"
              isActive: true
      responses:
        '201':
          description: Öğrenci başarıyla eklendi
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /students/{id}:
    get:
      tags:
        - Students
      summary: Öğrenci bilgilerini getir
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Öğrenci bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags:
        - Students
      summary: Öğrenci bilgilerini güncelle
      parameters:
        - $ref: '#/components/parameters/PathId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Öğrenci başarıyla güncellendi
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - Students
      summary: Öğrenci kaydını sil
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Öğrenci başarıyla silindi
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /loans:
    get:
      tags:
        - Loans
      summary: Tüm ödünç alma kayıtlarını getir
      responses:
        '200':
          description: Kayıtlar başarıyla getirildi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Loans
      summary: Kitap ödünç al
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
            example:
              id: "abcd1234-ef56-7890-1234-abcdef123456"
              studentId: "student-uuid"
              bookId: "book-uuid"
              loanDate: "2025-05-25"
              returnDate: null
              status: "ongoing"
      responses:
        '201':
          description: Ödünç alma işlemi başarıyla kaydedildi
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /loans/{id}:
    get:
      tags:
        - Loans
      summary: Belirli bir ödünç kaydını getir
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Kayıt bulundu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /loans/{id}/return:
    patch:
      tags:
        - Loans
      summary: Kitap iade et
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: Kitap başarıyla iade edildi
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Book:
      type: object
      required:
        - id
        - title
        - author
        - isbn
        - publisher
        - pageCount
        - stock
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
          pattern: '^\d{13}$'
          description: ISBN-13 formatında (13 haneli sayı)
        publisher:
          type: string
        pageCount:
          type: integer
          minimum: 1
        stock:
          type: integer
          minimum: 0

  parameters:
    PathId:
      name: id
      in: path
      required: true
      description: Kaynağın benzersiz kimliği (UUID formatında)
      schema:
        type: string
        format: uuid

    QueryPage:
      name: page
      in: query
      required: false
      description: Sayfa numarası (varsayılan: 1)
      schema:
        type: integer
        minimum: 1

    QuerySize:
      name: size
      in: query
      required: false
      description: Sayfa başına gösterilecek sonuç sayısı (varsayılan: 10)
      schema:
        type: integer
        minimum: 1

  responses:
    NotFound:
      description: Kayıt bulunamadı
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Kayıt bulunamadı"

    BadRequest:
      description: Geçersiz istek
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "İstek verisi geçersiz"

    InternalError:
      description: Sunucu hatası
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Beklenmeyen bir hata oluştu"
